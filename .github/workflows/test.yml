name: pruebas en Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar pruebas con reporte
        run: npm test -- --reporter=junit --outputFile=test-results.xml
        # Ajusta según tu runner de pruebas (Jest, Mocha, etc.)

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()  # Sube resultados aunque falle
        with:
          name: test-results
          path: test-results.xml
          retention-days: 30

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results
          path: test-results.xml
          reporter: jest-junit  # Cambia según tu runner

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v3

      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.Docker_Username }}
          password: ${{ secrets.Docker_Password }}

      - name: Construir y subir imagen a Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.Docker_Username }}/miapp:latest